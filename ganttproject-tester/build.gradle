buildscript {
    ext.kotlin_version = '1.6.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}
apply plugin: 'java'
apply plugin: 'kotlin'

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation fileTree(dir: project.ext.libDir, include: ['*.jar'])
    testImplementation project(path: ':biz.ganttproject.app.libs', configuration: 'exported')
    testImplementation project(':biz.ganttproject.core')
    testImplementation project(':ganttproject')
    testImplementation project(':biz.ganttproject.impex.msproject2')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.+'
    testImplementation "org.jooq:jooq:3.16.+"
    testImplementation group: 'com.h2database', name: 'h2', version: '2.1.+'

    testImplementation fileTree(dir: project.projectDir.absolutePath + "/resources")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.+'
}

sourceSets {
    test {
        java {
            srcDirs = ['test']
        }
        resources {
            srcDir 'resources'
        }
    }
}

test {
    useJUnitPlatform()
    include '**'
    testLogging {
        exceptionFormat = 'full'
    }
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }
    jvmArgs += ["-Dorg.jooq.no-logo=true"]
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

